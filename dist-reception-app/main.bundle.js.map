{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/accept-bill/accept-bill.component.css","./src/app/accept-bill/accept-bill.component.html","./src/app/accept-bill/accept-bill.component.ts","./src/app/accept-bill/sub-bill.ts","./src/app/app-routing.module.ts","./src/app/app-sidenav/app-sidenav.component.css","./src/app/app-sidenav/app-sidenav.component.html","./src/app/app-sidenav/app-sidenav.component.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/app.utility.ts","./src/app/bill-tariffs/bill-tariffs.component.css","./src/app/bill-tariffs/bill-tariffs.component.html","./src/app/bill-tariffs/bill-tariffs.component.ts","./src/app/book-appointment/book-appointment.component.css","./src/app/book-appointment/book-appointment.component.html","./src/app/book-appointment/book-appointment.component.ts","./src/app/confirm-dialog/confirm-dialog.component.html","./src/app/confirm-dialog/confirm-dialog.component.less","./src/app/confirm-dialog/confirm-dialog.component.ts","./src/app/guards/AuthGuard.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/login/login.service.ts","./src/app/logout/logout.component.css","./src/app/logout/logout.component.html","./src/app/logout/logout.component.ts","./src/app/manage-appointments/manage-appointments.component.css","./src/app/manage-appointments/manage-appointments.component.html","./src/app/manage-appointments/manage-appointments.component.ts","./src/app/register-patient/register-patient.component.css","./src/app/register-patient/register-patient.component.html","./src/app/register-patient/register-patient.component.ts","./src/app/services/app.service.ts","./src/app/services/appointment.service.ts","./src/app/services/bill.service.ts","./src/app/services/patient.service.ts","./src/app/view-bill/get-bill.service.ts","./src/app/view-bill/view-bill.component.css","./src/app/view-bill/view-bill.component.html","./src/app/view-bill/view-bill.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/accept-bill/accept-bill.component.css\n// module id = ./src/app/accept-bill/accept-bill.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\r\\n\\r\\n    <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n        <app-app-sidenav></app-app-sidenav>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <!-- Main Content Start -->\\r\\n    <mat-sidenav-content>\\r\\n        <div class=\\\"top-header\\\">\\r\\n            <button mat-button class=\\\"toggle-menu\\\" (click)=\\\"sidenav.open()\\\"><i class=\\\"material-icons\\\">menu</i></button>\\r\\n            <span>Billing</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"formBx\\\" style=\\\"padding: 15px 0;\\\">\\r\\n\\r\\n                <div class=\\\"pageHeading\\\">\\r\\n                    Generate Bill\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"billingForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Phone No.\\\" type=\\\"number\\\" formControlName=\\\"patient_contact\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"billingForm.controls['patient_contact'].touched && !billingForm.controls['patient_contact'].valid\\\">\\r\\n                                <span *ngIf=\\\"billingForm.controls['patient_contact'].hasError('required') \\\">\\r\\n                                    Phone No. is required\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"billingForm.controls['patient_contact'].hasError('pattern') \\\">\\r\\n                                    Invalid Phone No.\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Paitient Name\\\" type=\\\"text\\\" formControlName=\\\"patient_name\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"billingForm.controls['patient_name'].touched && !billingForm.controls['patient_name'].valid\\\">\\r\\n                                <span *ngIf=\\\"billingForm.controls['patient_name'].hasError('required') \\\">\\r\\n                                    Name is required\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <button mat-button type=\\\"button\\\" class=\\\"mat-raised-button mat-primary\\\" (click)=\\\"addTariffs()\\\">Add Tariffs</button>\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Tariff</th>\\r\\n                                    <th>Service Name</th>\\r\\n                                    <th>Service Category</th>\\r\\n                                    <th>Rate</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let tariff of appliedTariffs; let i = index\\\">\\r\\n                                    <td>{{tariff.tariff_name}}</td>\\r\\n                                    <td>{{tariff.service_name}}</td>\\r\\n                                    <td>{{tariff.service_category}}</td>\\r\\n                                    <td>{{tariff.rate}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Additional Charges\\\" type=\\\"number\\\" formControlName=\\\"add_charge\\\" (blur)=\\\"onAddChargeChange()\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Discount\\\" type=\\\"number\\\" formControlName=\\\"discount\\\" (blur)=\\\"onDiscountChange()\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Net Amount\\\" type=\\\"number\\\" formControlName=\\\"net_amount\\\" [readonly]=\\\"true\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Amount Paid\\\" type=\\\"number\\\" formControlName=\\\"amount_paid\\\" (blur)=\\\"onAmtPaidChange()\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Balance Amount\\\" type=\\\"number\\\" formControlName=\\\"balance_amt\\\" [readonly]=\\\"true\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"Payment Mode\\\" formControlName=\\\"payment_mode\\\">\\r\\n                                    <mat-option *ngFor=\\\"let mode of modes\\\" [value]=\\\"mode\\\">\\r\\n                                        {{mode}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <div class=\\\"button-row mt-3\\\">\\r\\n                                <a routerLink=\\\"/view-bill\\\" class=\\\"mat-raised-button \\\">View Bills</a>\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!billingForm.valid\\\" mat-button class=\\\"mat-raised-button mat-primary\\\">Generate\\r\\n                                    Bill</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<!-- Main Content End -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/accept-bill/accept-bill.component.html\n// module id = ./src/app/accept-bill/accept-bill.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { MatSnackBar, MatSidenav, MatDialog } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { SubBillData } from './sub-bill';\r\nimport { BillService } from \"../services/bill.service\";\r\nimport { BillTariffsComponent } from '../bill-tariffs/bill-tariffs.component';\r\nimport { AppointmentService } from '../services/appointment.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-accept-bill',\r\n  templateUrl: './accept-bill.component.html',\r\n  styleUrls: ['./accept-bill.component.css'],\r\n  providers: [BillService]\r\n})\r\nexport class AcceptBillComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  billingForm: FormGroup;\r\n  mobnumPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\r\n  hid: string = \"hid1\";\r\n\r\n  appointment: any;\r\n  tariffRates: any = [];\r\n\r\n  myControl = new FormControl();\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  sub_bill: Array<SubBillData>;\r\n\r\n  modes: String[] = ['Cash', 'Cheque', 'Online'];\r\n\r\n  appliedTariffs: any = [];\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private route: ActivatedRoute, public dialog: MatDialog, private billService: BillService, private appointmentService: AppointmentService, private snackbar: MatSnackBar) {\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params);\r\n      if (params.appointment_id) {\r\n        this.appointmentService.getAppointmentById(params.appointment_id).subscribe(responsedata => {\r\n          let data: any = responsedata;\r\n          this.appointment = data.response;\r\n\r\n          this.billingForm.controls[\"patient_name\"].setValue(this.appointment.patient.name);\r\n          this.billingForm.controls[\"patient_contact\"].setValue(this.appointment.patient.contact);\r\n\r\n          //fetching tariff rates.\r\n          this.appointmentService.getTariffRatesByAppointment(this.appointment.id).subscribe(responsedata => {\r\n            let data: any = responsedata;\r\n            this.prepareTariffData(data.response);\r\n            //this.tariffRates = data.response;\r\n          });\r\n\r\n        });\r\n\r\n\r\n\r\n      }\r\n    });\r\n\r\n    this.billingForm = this.formBuilder.group({\r\n      'patient_name': ['', Validators.required],\r\n      'patient_contact': ['', Validators.compose([Validators.required, Validators.pattern(this.mobnumPattern)])],\r\n      'add_charge': [''],\r\n      'discount': [''],\r\n      'net_amount': ['', Validators.required],\r\n      'amount_paid': [''],\r\n      'balance_amt': [''],\r\n      'payment_mode': [''],\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  prepareTariffData(tariffRates: any) {\r\n\r\n    tariffRates.forEach(element => {\r\n      let obj = { tariff_rate_id: element.id, tariff_name: element.tariff.name, service_name: element.service_name, service_category: element.service_category, rate: element.rate };\r\n      if (element.is_mandatory) {\r\n        this.applyTariff(obj);\r\n      } else {\r\n        this.tariffRates.push(obj);\r\n      }\r\n    });\r\n    this.calculateNetAmount();\r\n  }\r\n\r\n  applyTariff(obj: any) {\r\n    this.appliedTariffs.push(obj);\r\n    this.calculateNetAmount();\r\n  }\r\n\r\n  applyMandatoryTariffs(tariffRates: any) {\r\n    tariffRates.forEach(element => {\r\n      if (element.is_mandatory) {\r\n        let obj = { tariff_name: element.tariff.name, service_name: element.service_name, service_category: element.service_category, rate: element.rate };\r\n        this.appliedTariffs.push(obj);\r\n\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n  }\r\n\r\n  calculateNetAmount() {\r\n    let netAmount = 0;\r\n    this.appliedTariffs.forEach(element => {\r\n      netAmount += element.rate;\r\n    })\r\n\r\n    let addCharge = this.billingForm.controls[\"add_charge\"].value;\r\n    let discount = this.billingForm.controls[\"discount\"].value;\r\n\r\n    if (addCharge > 0) {\r\n      netAmount += addCharge;\r\n    }\r\n\r\n    if (discount > 0) {\r\n      netAmount -= discount;\r\n    }\r\n\r\n\r\n    let paidAmt = this.billingForm.controls[\"amount_paid\"].value;\r\n\r\n    let remaining = netAmount - paidAmt;\r\n\r\n    this.billingForm.controls[\"balance_amt\"].setValue(remaining);\r\n\r\n    this.billingForm.controls[\"net_amount\"].setValue(netAmount);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onClickAdd(tarName, servName) {\r\n    let subBill = new SubBillData(tarName, servName);\r\n    this.sub_bill.push(subBill);\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let req = {\r\n      \"appointment_id\": this.appointment.id,\r\n      \"additional_charges\": this.billingForm.controls[\"add_charge\"].value,\r\n      \"discount_amount\": this.billingForm.controls[\"discount\"].value,\r\n      \"net_amount\": this.billingForm.controls[\"net_amount\"].value,\r\n      \"paid_amount\": this.billingForm.controls[\"amount_paid\"].value,\r\n      \"payment_mode\": this.billingForm.controls[\"payment_mode\"].value,\r\n      \"bill_tariffs\": []\r\n    }\r\n\r\n    this.appliedTariffs.forEach(element => {\r\n      req.bill_tariffs.push({ amount: element.rate, tariff_rate_id: element.tariff_rate_id, remark: '' });\r\n    });\r\n\r\n\r\n    this.billService.createBill(req)\r\n      .subscribe((data: any) => {\r\n\r\n        this.router.navigate(['view-bill']);\r\n        this.snackbar.open(\"Bill Generated Successfully\", \"\", {\r\n          duration: 4000,\r\n        });\r\n      }, error => {\r\n        this.snackbar.open(\"Bill Generation Failed\", \"\", {\r\n          duration: 4000,\r\n        });\r\n      });\r\n  }\r\n\r\n  // valuechange(newValue) {\r\n  //   this.ratemodel = newValue;\r\n  //   console.log(newValue)\r\n  // }\r\n  // chargechange(newValue) {\r\n  //   this.chargemodel = newValue;\r\n  //   console.log(newValue)\r\n  // }\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n  addTariffs() {\r\n    let dialogRef = this.dialog.open(BillTariffsComponent, {\r\n      width: '800px',\r\n      data: { tariffs: this.tariffRates }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(\"result\", result);\r\n\r\n      if (result)\r\n        this.applyTariff(result.tariff);\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  onAddChargeChange() {\r\n    this.calculateNetAmount();\r\n  }\r\n\r\n  onDiscountChange() {\r\n    this.calculateNetAmount();\r\n  }\r\n\r\n  onAmtPaidChange() {\r\n    this.calculateNetAmount();\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/accept-bill/accept-bill.component.ts","export class SubBillData{\r\n    tariff_name: string;\r\n    service_name: string;\r\n\r\n    constructor(tarName, servName){\r\n        this.tariff_name = tarName;\r\n        this.service_name = servName;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/accept-bill/sub-bill.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterPatientComponent } from './register-patient/register-patient.component';\r\nimport { BookAppointmentComponent } from './book-appointment/book-appointment.component';\r\nimport { ManageAppointmentsComponent } from './manage-appointments/manage-appointments.component';\r\nimport { AcceptBillComponent } from './accept-bill/accept-bill.component';\r\nimport { ViewBillComponent } from './view-bill/view-bill.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthGuard } from './guards/AuthGuard';\r\nimport { UploaderComponent } from './uploader/uploader.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent ,canActivate: [AuthGuard]},\r\n  { path: 'home', component: HomeComponent ,canActivate: [AuthGuard]},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register-patient', component: RegisterPatientComponent ,canActivate: [AuthGuard] },\r\n  { path: 'book-appointment', component: BookAppointmentComponent ,canActivate: [AuthGuard]},  \r\n  { path: 'appointments', component: ManageAppointmentsComponent ,canActivate: [AuthGuard]},  \r\n  { path: 'accept-bill', component: AcceptBillComponent ,canActivate: [AuthGuard]},  \r\n  { path: 'view-bill', component: ViewBillComponent ,canActivate: [AuthGuard]},\r\n  { path: 'logout', component: LogoutComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\\r\\n.header-menu{\\r\\n    display: block;\\r\\n    padding: 0px;\\r\\n    margin-top: 20px;\\r\\n    width: 250px;\\r\\n}\\r\\n\\r\\n.header-menu li{\\r\\n    display: block;\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.header-menu li a{\\r\\n    display: block;\\r\\n    text-decoration: none;\\r\\n    color: #333;\\r\\n    padding: 7px 15px;\\r\\n    border-bottom: 1px solid #f7f7f7;\\r\\n}\\r\\n\\r\\n.header-menu li a span{\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.header-menu li a i{\\r\\n    color: #fd6732;\\r\\n    font-size: 20px;\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n    margin-right: 8px;\\r\\n}\\r\\n\\r\\n.header-menu li a:hover, .header-menu li a:focus{\\r\\n    background: #f7f7f7;\\r\\n}\\r\\n\\r\\n.li-active{\\r\\n    background: #f7f7f7;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app-sidenav/app-sidenav.component.css\n// module id = ./src/app/app-sidenav/app-sidenav.component.css\n// module chunks = main","module.exports = \"<ul class=\\\"header-menu\\\">\\r\\n    <li><a routerLink=\\\"/home\\\" routerLinkActive=\\\"li-active\\\"><i class=\\\"material-icons\\\">home</i>\\r\\n            <span>Home</span></a></li>\\r\\n    <li><a routerLink=\\\"/register-patient\\\" routerLinkActive=\\\"li-active\\\"><i class=\\\"material-icons\\\">how_to_reg</i>\\r\\n            <span>Register Patient</span></a></li>\\r\\n    <li><a routerLink=\\\"/book-appointment\\\" routerLinkActive=\\\"li-active\\\"><i class=\\\"material-icons\\\">book</i>\\r\\n            <span>Book Appointments</span></a></li>\\r\\n    <li><a routerLink=\\\"/appointments\\\" routerLinkActive=\\\"li-active\\\"><i class=\\\"material-icons\\\">format_list_numbered</i>\\r\\n            <span>Manage Appointments</span></a></li>\\r\\n    <li><a routerLink=\\\"/accept-bill\\\" routerLinkActive=\\\"li-active\\\"><i class=\\\"material-icons\\\">payment</i>\\r\\n            <span>Accept Bills</span></a></li>\\r\\n    <li><a routerLink=\\\"/view-bill\\\" routerLinkActive=\\\"li-active\\\"><i class=\\\"material-icons\\\">payment</i>\\r\\n            <span>View Bills</span></a></li>\\r\\n    <li><a routerLink=\\\"/logout\\\" routerLinkActive=\\\"li-active\\\"><i class=\\\"material-icons\\\">power_settings_new</i>\\r\\n            <span>Logout</span></a></li>\\r\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app-sidenav/app-sidenav.component.html\n// module id = ./src/app/app-sidenav/app-sidenav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-app-sidenav',\r\n  templateUrl: './app-sidenav.component.html',\r\n  styleUrls: ['./app-sidenav.component.css']\r\n})\r\nexport class AppSidenavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-sidenav/app-sidenav.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AppConfig {\r\n\r\n  API_BASE_URL = \"http://13.233.187.165:8080/harbor\";  \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.config.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common'\r\n\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatFormFieldModule, MatInputModule, MatDialogModule } from '@angular/material';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterPatientComponent } from './register-patient/register-patient.component';\r\nimport { BookAppointmentComponent } from './book-appointment/book-appointment.component';\r\nimport { AppSidenavComponent } from './app-sidenav/app-sidenav.component';\r\nimport { ManageAppointmentsComponent } from './manage-appointments/manage-appointments.component';\r\nimport { AcceptBillComponent } from './accept-bill/accept-bill.component';\r\nimport { ViewBillComponent } from './view-bill/view-bill.component';\r\nimport { AppointmentService } from './services/appointment.service';\r\nimport { AppUtility } from './app.utility';\r\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\r\nimport { BillTariffsComponent } from './bill-tariffs/bill-tariffs.component';\r\nimport { BillService } from './services/bill.service';\r\nimport { AppService } from './services/app.service';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthGuard } from './guards/AuthGuard';\r\nimport { AppConfig } from './app.config';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterPatientComponent,\r\n    BookAppointmentComponent,\r\n    AppSidenavComponent,\r\n    ManageAppointmentsComponent,\r\n    AcceptBillComponent,\r\n    ViewBillComponent,\r\n    ConfirmDialogComponent,\r\n    BillTariffsComponent,\r\n    LogoutComponent\r\n    // AppGlobals,\r\n    // AppConfig\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n\r\n    AppRoutingModule,\r\n    MatSlideToggleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    MatSnackBarModule,\r\n    MatSidenavModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatAutocompleteModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatDialogModule\r\n    // AppGlobals,\r\n    // AppConfig\r\n  ],\r\n  providers: [DatePipe, AppointmentService, AppUtility, BillService, AppService, AuthGuard, AppConfig],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    ConfirmDialogComponent,\r\n    BillTariffsComponent\r\n\r\n  ],\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class AppUtility {\r\n\r\n    formatDate(date) {\r\n        var d = date,\r\n          month = '' + (d.getMonth() + 1),\r\n          day = '' + d.getDate(),\r\n          year = d.getFullYear();\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n      }\r\n  \r\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.utility.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bill-tariffs/bill-tariffs.component.css\n// module id = ./src/app/bill-tariffs/bill-tariffs.component.css\n// module chunks = main","module.exports = \"<form [formGroup]=\\\"tariffsForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" formControlName=\\\"myControl1\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n              <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\r\\n              {{option}}  \\r\\n              </mat-option>\\r\\n          </mat-autocomplete>\\r\\n      </mat-form-field> -->\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Choose tariff\\\" formControlName=\\\"tariff_name\\\" (change)=\\\"setTariff()\\\">\\r\\n            <mat-option *ngFor=\\\"let tariff of tariffRates\\\" [value]=\\\"tariff\\\">\\r\\n              {{tariff.tariff_name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"errTxt\\\" *ngIf=\\\"tariffsForm.controls['tariff_name'].touched && !tariffsForm.controls['tariff_name'].valid\\\">\\r\\n          <span *ngIf=\\\"tariffsForm.controls['tariff_name'].hasError('required') \\\">\\r\\n            Please Enter Tariff Name\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Service Name\\\" type=\\\"text\\\" #servName formControlName=\\\"service_name\\\">\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"errTxt\\\" *ngIf=\\\"tariffsForm.controls['service_name'].touched && !tariffsForm.controls['service_name'].valid\\\">\\r\\n          <span *ngIf=\\\"tariffsForm.controls['service_name'].hasError('required') \\\">\\r\\n            Please Enter Service Name\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"button-row mt-3\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClickAdd(tarName.value, servName.value); tarName.value=''; servName.value='' \\\" mat-button class=\\\"mat-raised-button mat-primary\\\">Add</button>\\r\\n      </div>\\r\\n  </div> -->\\r\\n\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Service Cateory\\\" type=\\\"text\\\" formControlName=\\\"service_category\\\">\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"errTxt\\\" *ngIf=\\\"tariffsForm.controls['service_category'].touched && !tariffsForm.controls['service_category'].valid\\\">\\r\\n          <span *ngIf=\\\"tariffsForm.controls['service_category'].hasError('required') \\\">\\r\\n            Please Enter Category\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Rate\\\" type=\\\"number\\\" formControlName=\\\"rate\\\">\\r\\n          <!-- [ngModel]=\\\"ratemodel\\\" (ngModelChange)=\\\"valuechange($event)\\\" -->\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"errTxt\\\" *ngIf=\\\"tariffsForm.controls['rate'].touched && !tariffsForm.controls['rate'].valid\\\">\\r\\n          <span *ngIf=\\\"tariffsForm.controls['rate'].hasError('required') \\\">\\r\\n            Please Enter Rate/Amount\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"button-row mt-3\\\">\\r\\n          <button type=\\\"submit\\\" [disabled]=\\\"!tariffsForm.valid\\\" mat-button class=\\\"mat-raised-button mat-primary\\\" >Add</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bill-tariffs/bill-tariffs.component.html\n// module id = ./src/app/bill-tariffs/bill-tariffs.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AppointmentService } from '../services/appointment.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-bill-tariffs',\r\n  templateUrl: './bill-tariffs.component.html',\r\n  styleUrls: ['./bill-tariffs.component.css']\r\n})\r\nexport class BillTariffsComponent implements OnInit {\r\n\r\n  tariffsForm: FormGroup;\r\n\r\n  tariffs: any;\r\n\r\n  tariffRates: any = [];\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    public dialogRef: MatDialogRef<BillTariffsComponent>, private formBuilder: FormBuilder, private appointmentService: AppointmentService) {\r\n\r\n    if (dialogData.hasOwnProperty(\"tariffs\")) {\r\n      this.tariffRates = dialogData.tariffs;\r\n    }\r\n\r\n    this.tariffsForm = this.formBuilder.group({\r\n      'tariff_name': ['', Validators.required],\r\n      'service_name': ['', Validators.required],\r\n      'service_category': ['', Validators.required],\r\n      'rate': ['', Validators.required],\r\n      \"tariff_rate_id\": [\"\"]\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setTariff() {\r\n    let tariff = this.tariffsForm.controls[\"tariff_name\"].value;\r\n    this.tariffsForm.controls[\"service_name\"].setValue(tariff.service_name);\r\n    this.tariffsForm.controls[\"service_category\"].setValue(tariff.service_category);\r\n    this.tariffsForm.controls[\"rate\"].setValue(tariff.rate);\r\n    this.tariffsForm.controls[\"tariff_rate_id\"].setValue(tariff.tariff_rate_id);\r\n  }\r\n\r\n  onSubmit() {\r\n    let selectedTariff = this.tariffsForm.value;\r\n    selectedTariff.tariff_name = selectedTariff.tariff_name.tariff_name;\r\n    this.dialogRef.close({ \"tariff\": selectedTariff });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/bill-tariffs/bill-tariffs.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/book-appointment/book-appointment.component.css\n// module id = ./src/app/book-appointment/book-appointment.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\r\\n\\r\\n    <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n        <app-app-sidenav></app-app-sidenav>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <!-- Main Content Start -->\\r\\n    <mat-sidenav-content>\\r\\n        <div class=\\\"top-header\\\">\\r\\n            <button mat-button class=\\\"toggle-menu\\\" (click)=\\\"sidenav.open()\\\"><i class=\\\"material-icons\\\">menu</i></button>\\r\\n            <span>Book Appointment</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"formBx\\\">\\r\\n\\r\\n                <div class=\\\"pageHeading\\\">\\r\\n                    Book Appointment\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"appointmentForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Phone No.\\\" type=\\\"number\\\" formControlName=\\\"contact\\\" (blur)=\\\"getPatientName(appointmentForm.controls.contact.value)\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"appointmentForm.controls['contact'].touched && !appointmentForm.controls['contact'].valid\\\">\\r\\n                                <span *ngIf=\\\"appointmentForm.controls['contact'].hasError('required') \\\">\\r\\n                                    Phone No. is required\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"appointmentForm.controls['contact'].hasError('pattern') \\\">\\r\\n                                    Invalid Phone No.\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Full Name\\\" type=\\\"text\\\" formControlName=\\\"patient_name\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"appointmentForm.controls['patient_name'].touched && !appointmentForm.controls['patient_name'].valid\\\">\\r\\n                                <span *ngIf=\\\"appointmentForm.controls['patient_name'].hasError('required') \\\">\\r\\n                                    Name is required\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"Choose Doctor\\\" formControlName=\\\"doctor\\\" required (change)=\\\"getDepartments(appointmentForm.controls.doctor.value)\\\">\\r\\n                                    <mat-option>--</mat-option>\\r\\n                                    <mat-option *ngFor=\\\"let doctor of doctorList\\\" [value]=\\\"doctor\\\">\\r\\n                                        {{doctor.name}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"appointmentForm.controls['doctor'].touched && !appointmentForm.controls['doctor'].valid\\\">\\r\\n                                <span *ngIf=\\\"appointmentForm.controls['doctor'].hasError('required') \\\">\\r\\n                                    Doctor is required\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"Choose Department\\\" formControlName=\\\"department\\\" required\\r\\n                                    (change)=\\\"getRoom(appointmentForm.controls.department.value)\\\">\\r\\n                                    <mat-option>--</mat-option>\\r\\n                                    <mat-option *ngFor=\\\"let department of departmentList\\\" [value]=\\\"department\\\">\\r\\n                                        {{department.department.name}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"appointmentForm.controls['department'].touched && !appointmentForm.controls['department'].valid\\\">\\r\\n                                <span *ngIf=\\\"appointmentForm.controls['department'].hasError('required') \\\">\\r\\n                                    Department is required\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Room Name\\\" type=\\\"text\\\" formControlName=\\\"room_name\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\" placeholder=\\\"Choose a date\\\"\\r\\n                                (dateChange)=\\\"getSlots()\\\" >\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker touchUi #picker></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"appointmentForm.controls['date'].touched && !appointmentForm.controls['date'].valid\\\">\\r\\n                                <span *ngIf=\\\"appointmentForm.controls['date'].hasError('required') \\\">\\r\\n                                    Date is required\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"Choose Slot\\\" formControlName=\\\"slot\\\" required>\\r\\n                                    <mat-option>--</mat-option>\\r\\n                                    <mat-option *ngFor=\\\"let slot of slots\\\" [value]=\\\"slot\\\" [disabled]=\\\"slot.status != 0\\\">\\r\\n                                        {{slot.start_time + \\\" - \\\" + slot.end_time}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"appointmentForm.controls['slot'].touched && !appointmentForm.controls['slot'].valid\\\">\\r\\n                                <span *ngIf=\\\"appointmentForm.controls['slot'].hasError('required') \\\">\\r\\n                                    Slot is required\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <div class=\\\"button-row mt-3\\\">\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!appointmentForm.valid\\\" mat-button class=\\\"mat-raised-button mat-primary\\\">Book Appointment</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<!-- Main Content End -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/book-appointment/book-appointment.component.html\n// module id = ./src/app/book-appointment/book-appointment.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { MatSnackBar, MatSidenav } from '@angular/material';\r\nimport { AppointmentService } from '../services/appointment.service';\r\nimport { AppUtility } from '../app.utility';\r\n\r\n@Component({\r\n  selector: 'app-book-appointment',\r\n  templateUrl: './book-appointment.component.html',\r\n  styleUrls: ['./book-appointment.component.css'],\r\n  providers: [AppointmentService]\r\n})\r\nexport class BookAppointmentComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  doctorList: any;\r\n\r\n  departmentList: any;\r\n\r\n  slots: any;\r\n\r\n  appointmentForm: FormGroup;\r\n  mobnumPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\r\n  hid: string = \"hid1\";\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, public snackbar: MatSnackBar, private utility: AppUtility, private appointmentService: AppointmentService, public snackBar: MatSnackBar) {\r\n    this.appointmentForm = this.formBuilder.group({\r\n      'doctor': ['', Validators.required],\r\n      'department': ['', Validators.required],\r\n      'patient_name': ['', Validators.required],\r\n      'room_name': [''],\r\n      'contact': ['', Validators.compose([Validators.required, Validators.pattern(this.mobnumPattern)])],\r\n      'slot': ['', Validators.required],\r\n      'hid': [this.hid],\r\n      'date': ['', Validators.required],\r\n    });\r\n\r\n\r\n\r\n\r\n    this.appointmentService.getDoctorList().subscribe(responsedata => {\r\n      let data:any = responsedata;\r\n      if (data.response.length == 0) {\r\n        let snackBarRef = this.snackBar.open(\"Doctor list is empty.\", \"\", { duration: 3000 });\r\n      }\r\n\r\n      this.doctorList = data.response;\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let req: any = {\r\n      \"mobile\": this.appointmentForm.controls[\"contact\"].value,\r\n      \"patient_name\": this.appointmentForm.controls[\"patient_name\"].value,\r\n      \"slot_id\": this.appointmentForm.controls[\"slot\"].value.id,\r\n    }\r\n\r\n\r\n    this.appointmentService.createAppointment(req)\r\n      .subscribe((data: any) => {\r\n        this.appointmentForm.reset();\r\n\r\n        this.appointmentForm.markAsPristine();\r\n        this.appointmentForm.markAsUntouched();\r\n        this.appointmentForm.updateValueAndValidity();\r\n\r\n        console.log(JSON.stringify(data));\r\n        console.log(\"Appointment Booked Successfully\");\r\n        this.snackbar.open(\"Appointment Booked Successfully\", \"\", {\r\n          duration: 4000,\r\n        });\r\n      }, error => {\r\n        console.log(\"Appointment Booking Failed\");\r\n        this.snackbar.open(\"Appointment Booking Failed\", \"\", {\r\n          duration: 4000,\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  getAppointments() {\r\n\r\n  }\r\n\r\n  getPatientName(contact: any) {\r\n    this.appointmentService.getPatientByMobile(contact).subscribe(responsedata => {\r\n      let data:any = responsedata;\r\n      if (data.response != null) {\r\n        this.appointmentForm.controls[\"patient_name\"].setValue(data.response.name);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getDepartments(doctor: any) {\r\n\r\n    this.appointmentService.getDepartmentsByDoctor(doctor.id).subscribe(responsedata => {\r\n      let data:any = responsedata;\r\n      if (data.response != null) {\r\n        this.departmentList = data.response;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getRoom(department: any) {\r\n    this.appointmentForm.controls[\"room_name\"].setValue(department.room_name);\r\n  }\r\n\r\n  getSlots() {\r\n    console.log(\"getSlots\", this.appointmentForm.controls[\"date\"].value);\r\n\r\n    let date: Date = this.appointmentForm.controls[\"date\"].value;\r\n    let date1 = this.utility.formatDate(date);\r\n\r\n    let criteria = {\r\n      \"department_id\": this.appointmentForm.controls[\"department\"].value.department.id,\r\n      \"doctor_id\": this.appointmentForm.controls[\"doctor\"].value.id,\r\n      \"date\": date1\r\n    }\r\n\r\n    this.appointmentService.getSlots(criteria).subscribe(responsedata => {\r\n      let data:any = responsedata;\r\n      console.log(data.response);\r\n      if (data.response != null) {\r\n        this.slots = data.response;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/book-appointment/book-appointment.component.ts","module.exports = \"<h2 mat-dialog-title class=\\\"text-truncate\\\">{{title}}</h2>\\r\\n<mat-dialog-content [innerHTML]=\\\"confirmMsg\\\"></mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <div class=\\\"col-sm-12 text-right pr-0\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Yes</button>\\r\\n    <button mat-raised-button mat-dialog-close>No</button>\\r\\n    <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\r\\n  </div>\\r\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/confirm-dialog/confirm-dialog.component.html\n// module id = ./src/app/confirm-dialog/confirm-dialog.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/confirm-dialog/confirm-dialog.component.less\n// module id = ./src/app/confirm-dialog/confirm-dialog.component.less\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.less']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  title: string = \"Please confirm your action.\";\r\n  confirmMsg: string = \"Are you sure you want to perform this action?\";\r\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData: any) {\r\n\r\n    console.log(dialogData);\r\n    if (dialogData.hasOwnProperty(\"title\"))\r\n      this.title = dialogData.title;\r\n\r\n    if (dialogData.hasOwnProperty(\"confirmMsg\"))\r\n      this.confirmMsg = dialogData.confirmMsg;\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/confirm-dialog/confirm-dialog.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('auth')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/AuthGuard.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container\\r\\n    class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\r\\n\\r\\n  <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n    <app-app-sidenav></app-app-sidenav>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <!-- Main Content Start -->\\r\\n  <mat-sidenav-content>\\r\\n    <div class=\\\"top-header\\\">\\r\\n        <button mat-button class=\\\"toggle-menu\\\" (click)=\\\"sidenav.open()\\\"><i class=\\\"material-icons\\\">menu</i></button>\\r\\n        <span>Home</span>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"container-fluid mb-3\\\">  \\r\\n        <div class=\\\"main-logo\\\">\\r\\n            <img src=\\\"assets/images/harbor-logo.png\\\"/>\\r\\n        </div>\\r\\n\\r\\n        <!-- Home Content Menus -->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <a routerLink=\\\"/register-patient\\\" class=\\\"home-menu-box\\\">\\r\\n                        <i class=\\\"material-icons\\\">how_to_reg</i>\\r\\n                        <span>Register<br/>Patient</span>\\r\\n                    </a>      \\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <a routerLink=\\\"/book-appointment\\\" class=\\\"home-menu-box\\\">\\r\\n                        <i class=\\\"material-icons\\\">book</i>\\r\\n                        <span>Book<br/>Appointments</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <a routerLink=\\\"/appointments\\\" class=\\\"home-menu-box\\\">\\r\\n                        <i class=\\\"material-icons\\\">format_list_numbered</i>\\r\\n                        <span>Manage<br/>Appointments</span>\\r\\n                    </a>      \\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <a routerLink=\\\"/accept-bill\\\" class=\\\"home-menu-box\\\">\\r\\n                        <i class=\\\"material-icons\\\">payment</i>\\r\\n                        <span>Accept<br/>Bills</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Home Content Menus End -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"loginBx\\\">\\r\\n\\r\\n        <div class=\\\"main-logo\\\">\\r\\n            <img src=\\\"assets/images/harbor-logo.png\\\"/>\\r\\n        </div>\\r\\n\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" formControlName=\\\"username\\\">\\r\\n                    <i matSuffix class=\\\"material-icons suffix-icon\\\">person</i>\\r\\n                  </mat-form-field>\\r\\n                  <div class=\\\"errTxt\\\" *ngIf=\\\"loginForm.controls['username'].touched && !loginForm.controls['username'].valid\\\">  \\r\\n                      <span *ngIf=\\\"loginForm.controls['username'].hasError('required') \\\">  \\r\\n                          Username is required  \\r\\n                      </span> \\r\\n                  </div> \\r\\n              </div>\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\r\\n                  <i matSuffix class=\\\"material-icons suffix-icon\\\">lock</i>\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"errTxt\\\" *ngIf=\\\"loginForm.controls['password'].touched && !loginForm.controls['password'].valid\\\">  \\r\\n                    <span *ngIf=\\\"loginForm.controls['password'].hasError('required') \\\">  \\r\\n                        Password is required  \\r\\n                    </span> \\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-12\\\">\\r\\n                  <div class=\\\"button-row mt-3\\\">\\r\\n                      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" mat-button class=\\\"mat-raised-button mat-primary\\\">Login</button>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from './login.service';\r\nimport { AppService } from '../services/app.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [LoginService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private appService: AppService,\r\n    private snackbar: MatSnackBar) {\r\n    this.loginForm = this.formBuilder.group({\r\n      'username': ['', Validators.required],\r\n      'password': ['', Validators.required],\r\n    });\r\n\r\n    let auth: any = localStorage.getItem(\"auth\");\r\n    \r\n    if (auth != null) {\r\n      this.router.navigate(['/']);\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.appService.login(this.loginForm.value)\r\n      .subscribe(resp => {\r\n        let r: any = resp;\r\n        localStorage.setItem(\"auth\", JSON.stringify(r.response));\r\n        this.router.navigate(['/']);\r\n\r\n        console.log(\"Login Successfull!\");\r\n      }, error => {\r\n        console.log(\"Login Failed!\");\r\n        this.snackbar.open(\"Invalid credentials.\", \"\", {\r\n          duration: 4000,\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { LoginData } from \"./login.model\";\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'my-auth-token'\r\n    })\r\n};\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    private serviceUrl = \"http://localhost:1010/ReceptionApp-WebService/login\";\r\n\r\n    constructor(private _http: HttpClient){}\r\n\r\n    loginUser(loginData: LoginData){\r\n        console.log(loginData);\r\n        return this._http.post(this.serviceUrl, loginData, {\r\n            headers: new HttpHeaders()\r\n                .set('Content-Type', 'application/json'),\r\n                observe: 'response'\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logout/logout.component.css\n// module id = ./src/app/logout/logout.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  logout works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logout/logout.component.html\n// module id = ./src/app/logout/logout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n    localStorage.removeItem(\"auth\");\r\n    this.router.navigate(['/login']);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logout/logout.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/manage-appointments/manage-appointments.component.css\n// module id = ./src/app/manage-appointments/manage-appointments.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\r\\n\\r\\n    <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n        <app-app-sidenav></app-app-sidenav>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <!-- Main Content Start -->\\r\\n    <mat-sidenav-content>\\r\\n        <div class=\\\"top-header\\\">\\r\\n            <button mat-button class=\\\"toggle-menu\\\" (click)=\\\"sidenav.open()\\\"><i class=\\\"material-icons\\\">menu</i></button>\\r\\n            <span>Appointments</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n\\r\\n            <div class=\\\"pageHeading\\\" style=\\\"margin-top:60px;\\\">\\r\\n                Manage Appointments\\r\\n            </div>\\r\\n\\r\\n            <!-- Appointment lists -->\\r\\n            <div class=\\\"appointment-box\\\">\\r\\n                <form [formGroup]=\\\"searchAppointmentForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select placeholder=\\\"Choose Doctor\\\" formControlName=\\\"doctor\\\" required>\\r\\n                                <mat-option>--</mat-option>\\r\\n                                <mat-option *ngFor=\\\"let doctor of doctorList\\\" [value]=\\\"doctor\\\">\\r\\n                                    {{doctor.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"mb-2\\\">\\r\\n                        <span>\\r\\n                            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\" placeholder=\\\"Choose a date\\\">\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker touchUi #picker></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                        </span>\\r\\n                        <!-- <div class=\\\"button-row mt-3\\\">\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!getAppointment.valid\\\" mat-button class=\\\"mat-raised-button mat-primary\\\">View Appointments</button>\\r\\n                    </div> -->\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchAppointmentForm.valid\\\" mat-button class=\\\"mat-raised-button mat-primary\\\">Search</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <ul class=\\\"app-list\\\">\\r\\n                    <li *ngFor=\\\"let result of results; let i = index\\\">\\r\\n                        <span class=\\\"li-span\\\">{{ i + 1 }}</span>\\r\\n                        <span class=\\\"li-span\\\">{{ result.patient.name }}</span>\\r\\n                        <span class=\\\"li-span\\\">{{ result.slot.start_time + \\\"-\\\"+ result.slot.end_time }}</span>\\r\\n                        <span class=\\\"li-span\\\">\\r\\n                            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"closeAppointment(result)\\\" [disabled]=\\\"result.status == 2\\\">Close</button>\\r\\n                        </span>\\r\\n                        <span class=\\\"li-span\\\">\\r\\n                            <mat-menu class=\\\"appntMenu\\\" #editAppnt=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                                <button mat-menu-item (click)=\\\"goToPaymentPage(result)\\\">Make Payment</button>\\r\\n\\r\\n                            </mat-menu>\\r\\n\\r\\n                            <button class=\\\"editAppntBtn\\\" mat-icon-button [matMenuTriggerFor]=\\\"editAppnt\\\">\\r\\n                                <i class=\\\"material-icons\\\">more_vert</i>\\r\\n                            </button>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<!-- Main Content End -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/manage-appointments/manage-appointments.component.html\n// module id = ./src/app/manage-appointments/manage-appointments.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar, MatSidenav, MatDialog, MatDialogRef, MAT_DIALOG_DATA, } from '@angular/material';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AppointmentGetData } from '../book-appointment/appointment-get.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AppointmentService } from '../services/appointment.service';\r\nimport { AppUtility } from '../app.utility';\r\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-manage-appointments',\r\n  templateUrl: './manage-appointments.component.html',\r\n  styleUrls: ['./manage-appointments.component.css'],\r\n  providers: [AppointmentService]\r\n})\r\nexport class ManageAppointmentsComponent implements OnInit {\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  searchAppointmentForm: FormGroup;\r\n  results: any;\r\n  hid: string = \"hid1\";\r\n  newdate: string;\r\n  doctor: any;\r\n  //newdate = new Date();\r\n  date;\r\n  latest_date: Date;\r\n  latest_date1: string;\r\n  doctorList: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, public dialog: MatDialog, private appointmentService: AppointmentService, private utility: AppUtility, public snackbar: MatSnackBar, public datepipe: DatePipe) {\r\n    this.searchAppointmentForm = this.formBuilder.group({\r\n      'date': [\"\", Validators.required],\r\n      'doctor': [\"\", Validators.required],\r\n    });\r\n\r\n\r\n    this.appointmentService.getDoctorList().subscribe(responsedata => {\r\n      let data: any = responsedata;\r\n      this.doctorList = data.response;\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.date = new Date();\r\n    let latest_date = this.datepipe.transform(this.date, 'yyyy-MM-dd');\r\n    this.newdate = latest_date.toString();\r\n    console.log(this.newdate);\r\n    //this.getApps(this.hid, this.newdate);\r\n  }\r\n\r\n  onChange($event) {\r\n\r\n\r\n    // this.date=new Date();\r\n    // let latest_date =this.datepipe.transform(this.date, 'yyyy-MM-dd');\r\n    // this.newdate = latest_date.toString();\r\n    // console.log(this.newdate);\r\n    // this.getApps(this.hid, this.newdate);\r\n  }\r\n\r\n  onSubmit() {\r\n    let date1 = this.utility.formatDate(this.searchAppointmentForm.controls[\"date\"].value);\r\n    let req: any = {\r\n      \"date\": date1,\r\n      \"doctor_id\": this.searchAppointmentForm.controls[\"doctor\"].value.id\r\n    }\r\n\r\n    this.appointmentService.searchAppointment(req)\r\n      .subscribe((data: any) => {\r\n        this.results = data.response;\r\n      }, error => {\r\n\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  closeAppointment(appointment: any) {\r\n    let dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      width: '300px',\r\n      data: { title: \"Close the Appointment\", confirmMsg: 'Do you really want to close the appointment?' }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(\"result\", result);\r\n      if (result) {\r\n        let req = { id: appointment.id, status: 2 }\r\n        //this.helpers.loading(\"submit-video-activity\");\r\n        this.appointmentService.updateAppointment(req).subscribe(data => {\r\n          //this.helpers.unloading(\"submit-video-activity\");\r\n          this.onSubmit();\r\n          let snackBarRef = this.snackbar.open(\"Appointment has been closed successfully! \", \"\", { duration: 3000 });\r\n\r\n        })\r\n      }\r\n      console.log('The dialog was closed', result);\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n  goToPaymentPage(appointment: any) {\r\n    this.router.navigate(['accept-bill'], { queryParams: { appointment_id: appointment.id } });\r\n    console.log(appointment);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/manage-appointments/manage-appointments.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register-patient/register-patient.component.css\n// module id = ./src/app/register-patient/register-patient.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\r\\n\\r\\n    <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n        <app-app-sidenav></app-app-sidenav>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <!-- Main Content Start -->\\r\\n    <mat-sidenav-content>\\r\\n        <div class=\\\"top-header\\\">\\r\\n            <button mat-button class=\\\"toggle-menu\\\" (click)=\\\"sidenav.open()\\\"><i class=\\\"material-icons\\\">menu</i></button>\\r\\n            <span>Register Patient</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"formBx\\\">\\r\\n\\r\\n                <div class=\\\"pageHeading\\\">\\r\\n                    Register Patient\\r\\n                </div>\\r\\n\\r\\n                <form [formGroup]=\\\"patientForm\\\" (ngSubmit)=\\\"onSubmit()\\\" enctype='multipart/form-data' novalidate>\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Full Name\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"patientForm.controls['name'].touched && !patientForm.controls['name'].valid\\\">\\r\\n                                <span *ngIf=\\\"patientForm.controls['name'].hasError('required') \\\">\\r\\n                                    Name is required\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Phone No.\\\" type=\\\"number\\\" formControlName=\\\"contact\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"patientForm.controls['contact'].touched && !patientForm.controls['contact'].valid\\\">\\r\\n                                <span *ngIf=\\\"patientForm.controls['contact'].hasError('required') \\\">\\r\\n                                    Phone No. is required\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"patientForm.controls['contact'].hasError('pattern') \\\">\\r\\n                                    Invalid Phone No.\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Aadhar No.\\\" type=\\\"number\\\" formControlName=\\\"aadhar_no\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Address\\\" type=\\\"text\\\" formControlName=\\\"address\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"City\\\" type=\\\"text\\\" formControlName=\\\"city\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"State\\\" type=\\\"text\\\" formControlName=\\\"state\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Pin Code\\\" type=\\\"number\\\" formControlName=\\\"pincode\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <p style=\\\"margin-bottom: 0; color: #686868;\\\"><label>Gender</label></p>\\r\\n                            <mat-radio-group formControlName=\\\"gender\\\">\\r\\n                                <mat-radio-button value=\\\"1\\\">Male</mat-radio-button>\\r\\n                                <mat-radio-button value=\\\"0\\\">Female</mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Age\\\" type=\\\"number\\\" formControlName=\\\"age\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Email Address\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"errTxt\\\" *ngIf=\\\"patientForm.controls['email'].touched && !patientForm.controls['email'].valid\\\">\\r\\n                                <span *ngIf=\\\"patientForm.controls['email'].hasError('email') \\\">\\r\\n                                    Invalid Email Address.\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- <div class=\\\"col-12\\\">\\r\\n                        <p style=\\\"margin-bottom: 0; color: #686868;\\\"><label>Upload Photo</label></p>\\r\\n                        <input type=\\\"file\\\" formControlName=\\\"photo\\\" placeholder=\\\"Upload Photo\\\">\\r\\n                    </div>  -->\\r\\n\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <div class=\\\"button-row mt-3 mb-2\\\">\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!patientForm.valid\\\" mat-button class=\\\"mat-raised-button mat-primary\\\">Register</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<!-- Main Content End -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register-patient/register-patient.component.html\n// module id = ./src/app/register-patient/register-patient.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar, MatSidenav } from '@angular/material';\r\nimport { PatientService } from '../services/patient.service';\r\n\r\n@Component({\r\n  selector: 'app-register-patient',\r\n  templateUrl: './register-patient.component.html',\r\n  styleUrls: ['./register-patient.component.css'],\r\n  providers: [PatientService]\r\n})\r\nexport class RegisterPatientComponent implements OnInit {\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  patientForm: FormGroup;\r\n  mobnumPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\r\n\r\n  constructor(private formBuilder: FormBuilder, private patientService: PatientService, public snackbar: MatSnackBar) {\r\n    this.patientForm = this.formBuilder.group({\r\n      'name': ['', Validators.required],\r\n      'contact': ['', Validators.compose([Validators.required, Validators.pattern(this.mobnumPattern)])],\r\n      'aadhar_no': [''],\r\n      'address': [''],\r\n      'city': [''],\r\n      'state': [''],\r\n      'pincode': [''],\r\n      'gender': [''],\r\n      'age': [''],\r\n      'email': [''],\r\n      //'photo': [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.patientForm.value);\r\n\r\n    this.patientService.createPatient(this.patientForm.value)\r\n      .subscribe((data: any) => {\r\n\r\n        this.patientForm.reset();\r\n\r\n        this.patientForm.updateValueAndValidity();\r\n        this.patientForm.markAsUntouched();\r\n        this.patientForm.markAsPristine();\r\n\r\n        this.snackbar.open(\"Patient Registered Successfully\", \"\", {\r\n          duration: 4000,\r\n        });\r\n      }, error => {\r\n        console.log(\"Registration Failed\");\r\n        this.snackbar.open(\"Registration Failed\", \"\", {\r\n          duration: 4000,\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register-patient/register-patient.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ApiResponse } from '../models/ApiResponse';\r\nimport { AppConfig } from '../app.config';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  private httpOptions: any = null;\r\n  private auth: any = null;\r\n\r\n  constructor(private http: HttpClient, private appConfig:AppConfig) {\r\n    let authdata = localStorage.getItem(\"auth\");\r\n    let authtoken  = \"\";\r\n    if (null != authdata) {\r\n      let auth = JSON.parse(authdata);\r\n      this.auth = auth;\r\n      authtoken = this.auth.authtoken;\r\n    }\r\n    let headers: any = { 'Authorization': 'Token ' + authtoken };\r\n    //let headers: any = { 'Authorization': 'Token eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtcmNvb2wiLCJ1c2VySWQiOiI5Iiwicm9sZSI6ImFkbWluIn0.YvfUxAwoHSibYxDHZ5ZLyLok5LQ1TvapRqfTQpHZObwK5By3hi_U3Hrqoh371-LOb1MbXgq0hDJwJnABlE93mw' };\r\n    this.httpOptions = { headers: new HttpHeaders(headers) };\r\n  }\r\n\r\n  login(req: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/app/login\", req, this.httpOptions)\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/app.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule, HttpHeaders } from '@angular/common/http';\r\nimport { ApiResponse } from '../models/ApiResponse';\r\nimport { AppConfig } from '../app.config';\r\n\r\n@Injectable()\r\nexport class AppointmentService {\r\n  private httpOptions: any = null;\r\n  //private apiBaseUrl: string = \"http://localhost:8090\";\r\n  //private apiBaseUrl: string = \"http://ec2-13-233-122-194.ap-south-1.compute.amazonaws.com:8080/harbor\";\r\n  private auth: any = null;\r\n\r\n  constructor(private http: HttpClient, private appConfig:AppConfig) {\r\n\r\n    let authdata = localStorage.getItem(\"auth\");\r\n    let authtoken  = \"\";\r\n    if (null != authdata) {\r\n      let auth = JSON.parse(authdata);\r\n      this.auth = auth;\r\n      authtoken = this.auth.authtoken;\r\n    }\r\n    let headers: any = { 'Authorization': 'Token ' + authtoken };\r\n    this.httpOptions = { headers: new HttpHeaders(headers) };\r\n  }\r\n\r\n  getDoctorList() {\r\n    return this.http.get<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/doctor/list\", this.httpOptions)\r\n  }\r\n\r\n  getPatientByMobile(mobile: string) {\r\n    return this.http.get<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/patient/mobile/\" + mobile, this.httpOptions)\r\n  }\r\n\r\n\r\n  getDepartmentsByDoctor(doctor: number) {\r\n    return this.http.get<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/doctor/\" + doctor + \"/departments\", this.httpOptions)\r\n  }\r\n\r\n  getSlots(criteria: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/doctor/slots\", criteria, this.httpOptions)\r\n  }\r\n\r\n  createAppointment(req: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/appointment/create\", req, this.httpOptions)\r\n  }\r\n\r\n  updateAppointment(req: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/appointment/update\", req, this.httpOptions)\r\n  }\r\n\r\n  searchAppointment(req: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/appointment/search\", req, this.httpOptions)\r\n  }\r\n\r\n  getTariffRatesByAppointment(appointmentId: number) {\r\n    return this.http.get<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/tariffs/appointment/\" + appointmentId, this.httpOptions)\r\n  }\r\n\r\n  getAppointmentById(appointmentId: number) {\r\n    return this.http.get<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/appointment/\" + appointmentId, this.httpOptions)\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/appointment.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ApiResponse } from '../models/ApiResponse';\r\nimport { AppConfig } from '../app.config';\r\n\r\n@Injectable()\r\nexport class BillService {\r\n  private httpOptions: any = null;\r\n  private auth: any = null;\r\n\r\n  constructor(private http: HttpClient, private appConfig:AppConfig) {\r\n    let authdata = localStorage.getItem(\"auth\");\r\n    if (null != authdata) {\r\n      let auth = JSON.parse(authdata);\r\n      this.auth = auth;\r\n    }\r\n    let headers: any = { 'Authorization': 'Token ' + this.auth.authtoken };\r\n    this.httpOptions = { headers: new HttpHeaders(headers) };\r\n  }\r\n\r\n  createBill(req: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/bill/create\", req, this.httpOptions)\r\n  }\r\n\r\n  getBills(criteria: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/bill/search\", criteria, this.httpOptions)\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/bill.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ApiResponse } from '../models/ApiResponse';\r\nimport { AppConfig } from '../app.config';\r\n\r\n@Injectable()\r\nexport class PatientService {\r\n\r\n  private httpOptions: any = null;\r\n  private auth: any = null;\r\n\r\n  constructor(private http: HttpClient, private appConfig:AppConfig) {\r\n    let authdata = localStorage.getItem(\"auth\");\r\n    if (null != authdata) {\r\n      let auth = JSON.parse(authdata);\r\n      this.auth = auth;\r\n    }\r\n    let headers: any = { 'Authorization': 'Token ' + this.auth.authtoken };\r\n\r\n    this.httpOptions = { headers: new HttpHeaders(headers) };\r\n  }\r\n\r\n\r\n\r\n  createPatient(req: any) {\r\n    return this.http.post<ApiResponse>(this.appConfig.API_BASE_URL + \"/api/patient/create\", req, this.httpOptions)\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/patient.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport { GetBillData } from \"./get-bill.model\";\r\n\r\n\r\n@Injectable()\r\nexport class GetBillService{\r\n\r\n    private serviceUrl = \"http://localhost:1010/ReceptionApp-WebService/viewbill\";\r\n\r\n    constructor(private _http: HttpClient){ }\r\n\r\n    getBills(hid):Observable<GetBillData[]> {\r\n        return this._http\r\n            .get<GetBillData[]>(this.serviceUrl+\"?hid=\"+hid)\r\n                .map( (results: any )  => results) ;    \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/view-bill/get-bill.service.ts","module.exports = \".table-bill th, .table-bill td{\\r\\n    white-space: nowrap;\\r\\n    padding: 5px;\\r\\n    font-size: 14px;\\r\\n}\\r\\n.btn-a{\\r\\n    padding: 3px 5px 1px; \\r\\n    line-height: 1;\\r\\n}\\r\\n.formBx{\\r\\n    padding: 15px 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-bill/view-bill.component.css\n// module id = ./src/app/view-bill/view-bill.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\r\\n\\r\\n    <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n        <app-app-sidenav></app-app-sidenav>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <!-- Main Content Start -->\\r\\n    <mat-sidenav-content>\\r\\n        <div class=\\\"top-header\\\">\\r\\n            <button mat-button class=\\\"toggle-menu\\\" (click)=\\\"sidenav.open()\\\"><i class=\\\"material-icons\\\">menu</i></button>\\r\\n            <span>Billing</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"formBx\\\">\\r\\n\\r\\n                <div class=\\\"pageHeading\\\">\\r\\n                    View Bills\\r\\n                </div>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search using Bill Id, Name, Contact\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <table class=\\\"table table-responsive table-bordered table-bill\\\">\\r\\n                    <thead class=\\\"thead-light\\\">\\r\\n                        <tr>\\r\\n                            <th>Sr.</th>\\r\\n                            <th>Bill Id</th>\\r\\n                            <th>App. Id</th>\\r\\n                            <th>Name</th>\\r\\n                            <th>Contact</th>\\r\\n                            <th>Net Amount</th>\\r\\n                            <th>Amount Paid</th>\\r\\n                            <th>Bal Amount</th>\\r\\n                            <th>Date</th>\\r\\n                            <th>Action</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let result of results; let i = index\\\">\\r\\n                            <td>{{ i+1 }}</td>\\r\\n                            <td>{{ result.id }}</td>\\r\\n                            <td>{{ result.hasOwnProperty(\\\"appointment\\\")  && result.appointment ? result.appointment.id : \\\"\\\" }}</td>\\r\\n                            <td>{{ result.hasOwnProperty(\\\"appointment\\\") && result.appointment ? result.appointment.patient.name:\\\"\\\" }}</td>\\r\\n                            <td>{{ result.hasOwnProperty(\\\"appointment\\\") && result.appointment ? result.appointment.patient.contact:\\\"\\\" }}</td>\\r\\n                            <td>{{ result.net_amount }}</td>\\r\\n                            <td>{{ result.paid_amount }}</td>\\r\\n                            <td>{{ result.net_amount - result.paid_amount }}</td>\\r\\n                            <td>{{ result.updated }}</td>\\r\\n                            <td>\\r\\n                                <a class=\\\"btn btn-info btn-sm btn-a\\\" routerLink=\\\"bill-details?bid={{ result.bill_id }}\\\">\\r\\n                                    <i class=\\\"material-icons\\\" style=\\\"font-size: 16px;\\\">view_list</i>\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-primary btn-sm btn-a\\\" routerLink=\\\"edit-bill?bid={{ result.bill_id }}\\\">\\r\\n                                    <i class=\\\"material-icons\\\" style=\\\"font-size: 16px;\\\">edit</i>\\r\\n                                </a>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<!-- Main Content End -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-bill/view-bill.component.html\n// module id = ./src/app/view-bill/view-bill.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatSidenav, MatSnackBar } from '@angular/material';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { GetBillData } from './get-bill.model';\r\nimport { GetBillService } from './get-bill.service';\r\nimport { BillService } from '../services/bill.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-bill',\r\n  templateUrl: './view-bill.component.html',\r\n  styleUrls: ['./view-bill.component.css'],\r\n  providers: [GetBillService]\r\n})\r\nexport class ViewBillComponent implements OnInit {\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  hid: string = \"hid1\";\r\n  results: any = [];\r\n  dataSource = new MatTableDataSource(this.results);\r\n\r\n  constructor(private billService: BillService, public snackbar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.getBills({});\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.getBills({ id: filterValue.trim() });\r\n    //this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getBills(criteria: any) {\r\n    this.billService.getBills(criteria)\r\n      .subscribe(data => {\r\n        let res: any = data;\r\n        this.results = res.response;\r\n      }, error => {\r\n        this.snackbar.open('Unable to fetch Bills', '', {\r\n          duration: 4000\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/view-bill/view-bill.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}